#spring:
#  application:
#    name: security
#  cloud:
#    config:
#      uri: http://${CONFIG_HOST:localhost}:${CONFIG_PORT:8888}
#      fail-fast: true
#      password: ${CONFIG_PASS:dev}
#      username: user

eureka:
  client:
    serviceUrl:
      defaultZone: http://${REGISTRY_HOST:localhost}:${REGISTRY_PORT:8761}/eureka/

server:
  port: ${PORT:8301}

database: mysql

spring:
  application:
    name: security
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: "jdbc:mysql://localhost:3306/online-taxi?useUnicode=true&characterEncoding=utf-8"
    username: "root"
    password: "4321qwer"
    initialization-mode: always
    schema: "classpath:db/${database}/schema.sql"
    data: "classpath:db/${database}/data.sql"


security:
  oauth2:
    client:
      # OAuth的ClientID和ClientSecret是写在OAuthClientDetailsService中的
      # 实际生产中要考虑好如何获取验证服务器的Endpoint、动态增加微服务客户端、如何分发客户端密钥等问题，而在演示工程中并不关注这些
      clientId: security
      clientSecret: security_secret
      accessTokenUri: http://localhost:${PORT:8301}/oauth/token
      grant-type: client_credentials
      scope: SERVICE

logging:
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(-){faint} %clr([%t]){faint} %clr(%-40logger{39}){cyan}[%line]%clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  level:
    root: INFO

